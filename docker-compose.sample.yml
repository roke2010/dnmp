version: "3"
services:
  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default

  php:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php
    expose:
      - 9501
    extra_hosts:
      - "www.site1.com:172.17.0.1"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

#  php56:
#    build:
#      context: ./services/php
#      args:
#        PHP_VERSION: php:${PHP56_VERSION}-fpm-alpine
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        PHP_EXTENSIONS: ${PHP56_EXTENSIONS}
#        TZ: "$TZ"
#    container_name: php56
#    expose:
#      - 9501
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP56_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP56_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP56_LOG_DIR}:/var/log/php
#      - ${DATA_DIR}/composer:/tmp/composer
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

#  php54:
#    build:
#      context: ./services/php54
#      args:
#        PHP_VERSION: php:${PHP54_VERSION}-fpm
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#        PHP_EXTENSIONS: ${PHP54_EXTENSIONS}
#        TZ: "$TZ"
#    container_name: php54
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP54_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP54_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
#      - ${PHP54_LOG_DIR}:/var/log/php
#      - ${DATA_DIR}/composer:/tmp/composer
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"

#  mysql5:
#    image: mysql:${MYSQL5_VERSION}
#    container_name: mysql5
#    ports:
#      - "${MYSQL5_HOST_PORT}:3306"
#    volumes:
#      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
#      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
#    restart: always
#    networks:
#      - default
#    environment:
#      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
#      TZ: "$TZ"

#  openresty:
#    image:  openresty/openresty:${OPENRESTY_VERSION}
#    container_name: openresty
#    ports:
#       - "${OPENRESTY_HTTP_HOST_PORT}:80"
#       - "${OPENRESTY_HTTPS_HOST_PORT}:443"
#    volumes:
#       - ${SOURCE_DIR}:/www/:rw
#       - ${OPENRESTY_CONFD_DIR}:/etc/nginx/conf.d/:ro
#       - ${OPENRESTY_SSL_CERTIFICATE_DIR}:/ssl:rw
#       - ${OPENRESTY_CONF_FILE}:/usr/local/openresty/nginx/conf/nginx.conf:ro
#       - ${OPENRESTY_FASTCGI_PHP_CONF}:/usr/local/openresty/nginx/conf/fastcgi-php.conf:ro
#       - ${OPENRESTY_CONF_FASTCGIPARAMS_FILE}:/usr/local/openresty/nginx/conf/fastcgi_params:ro
#       - ${OPENRESTY_LOG_DIR}:/var/log/nginx/:rw
#    environment:
#      TZ: "$TZ"
#    networks:
#      - default

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

#  memcached:
#    image: memcached:${MEMCACHED_VERSION}
#    container_name: memcached
#    ports:
#      - "${MEMCACHED_HOST_PORT}:11211"
#    environment:
#       MEMCACHED_CACHE_SIZE: "${MEMCACHED_CACHE_SIZE}"
#    networks:
#      - default

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_HOST_PORT_C}:5672"
      - "${RABBITMQ_HOST_PORT_S}:15672"
    environment:
       TZ: "$TZ"
       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    networks:
          - default

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "${PHPMYADMIN_HOST_PORT}:80"
    volumes:
      - ${PHPMYADMIN_USER_CONF_FILE}:/etc/phpmyadmin/config.user.inc.php:ro
      - ${PHPMYADMIN_PHP_CONF_FILE}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini:ro
    networks:
      - default
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - TZ=$TZ

#  phpredisadmin:
#    image: erikdubbelboer/phpredisadmin:latest
#    container_name: phpredisadmin
#    ports:
#      - "${REDISMYADMIN_HOST_PORT}:80"
#    networks:
#      - default
#    environment:
#      - REDIS_1_HOST=redis
#      - REDIS_1_PORT=6379
#      - TZ=$TZ

  mongodb:
    image: mongo:${MONGODB_VERSION}
    container_name: mongodb
    environment:
        MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
        MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
        TZ: "$TZ"
    volumes:
      - ${DATA_DIR}/mongo:/data/db:rw
      - ${DATA_DIR}/mongo_key:/mongo:rw
    ports:
       - "${MONGODB_HOST_PORT}:27017"
    networks:
       - default
    command:
       --auth

#  adminmongo:
#    image: mrvautin/adminmongo
#    container_name: adminmongo
#    ports:
#      - "${ADMINMONGO_HOST_PORT}:1234"
#    environment:
#      - HOST=0.0.0.0
#      - DB_HOST=mongodb
#      - DB_PORT=27017
#    networks:
#      - default

#  elasticsearch:
#    build:
#      context: ./services/elasticsearch
#      args:
#        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
#        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
#    container_name: elasticsearch
#    environment:
#      - TZ=$TZ
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    volumes:
#      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
#      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/elasticsearch.yml
#    hostname: elasticsearch
#    restart: always
#    ports:
#      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
#      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

#  kibana:
#    image: kibana:${KIBANA_VERSION}
#    container_name: kibana
#    environment:
#      TZ: "$TZ"
#      elasticsearch.hosts: http://elasticsearch:9200
#    hostname: kibana
#    depends_on:
#      - elasticsearch
#    restart: always
#    ports:
#      - "${KIBANA_HOST}:5601"

#  logstash:
#    image: logstash:${LOGSTASH_VERSION}
#    container_name: logstash
#    hostname: logstash
#    restart: always
#    depends_on:
#      - elasticsearch
#    environment:
#      TZ: "$TZ"
#    ports:
#      - "${LOGSTASH_HOST_PORT_C}:9600"
#      - "${LOGSTASH_HOST_PORT_S}:5044"
#  gitlab:
#    image: 'gitlab/gitlab-ce:latest'
#    container_name: gitlab
#    restart: always
#    hostname: 'git.****.com'
#    environment:
#      TZ: 'Asia/Shanghai'
#      GITLAB_OMNIBUS_CONFIG: |
#        external_url 'http://git.****.com:8929'  #域名或者IP都可以,以后就是这个连接可以直接访问
#        gitlab_rails['time_zone'] = 'Asia/Shanghai'
#        gitlab_rails['smtp_enable'] = true
#        gitlab_rails['smtp_address'] = "smtp.163.com"
#        gitlab_rails['smtp_port'] = 465
#        gitlab_rails['smtp_user_name'] = "****@163.com"  #用自己的163邮箱
#        gitlab_rails['smtp_password'] = "****"
#        gitlab_rails['smtp_domain'] = "163.com"
#        gitlab_rails['smtp_authentication'] = "login"
#        gitlab_rails['smtp_enable_starttls_auto'] = true
#        gitlab_rails['smtp_openssl_verify_mode'] = 'peer'
#        gitlab_rails['smtp_tls'] = true
#        gitlab_rails['gitlab_email_from'] = '****@163.com'
#        gitlab_rails['gitlab_email_display_name'] = '****'
#        gitlab_rails['gitlab_email_reply_to'] = '****@163.com'
#        gitlab_rails['gitlab_shell_ssh_port'] = 2224
#        gitlab_rails['gitlab_email_enabled'] = true
#    ports:
#      - '8929:8929'
#      - '8443:443'
#      - '2224:22'
#    volumes:
#      - ${GITLAB_CONF_FILE}:/etc/gitlab
#      - ${GITLAB_LOG_FILE}:/var/log/gitlab
#      - ${GITLAB_DATA_FILE}:/var/opt/gitlab
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "20m"
#        max-file: "10"

networks:
  default:
